name: Windows Build (Autotools)

on:
  workflow_dispatch:

permissions: read-all

jobs:
  build:
    runs-on: windows-latest

    env:
      ICONV_URL: https://codeload.github.com/win-iconv/win-iconv/zip
      ICONV_VER: 0.0.8

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 需要完整历史记录来生成 configure 脚本

    - name: Setup build environment
      shell: powershell
      run: |
        # 安装基础工具
        choco install -y openssl --version=3.1.1
        choco install -y gperf
        choco install -y 7zip
        choco install -y make

        # 安装完整 MSYS2 环境
        choco install -y msys2 --params="/NoUpdate /InstallDir:C:\msys64"
        # 设置环境变量
        $env:PATH = "C:\msys64\usr\bin;C:\msys64\mingw64\bin;$env:PATH"
        Add-Content $env:GITHUB_PATH "C:\msys64\usr\bin"
        Add-Content $env:GITHUB_PATH "C:\msys64\mingw64\bin"

    - name: Install autotools
      shell: bash
      run: |
        # 在 MSYS2 中安装 autotools
        pacman -Sy --noconfirm --needed autoconf automake libtool pkg-config
        autoreconf --version

    - name: Generate configure script
      shell: bash
      run: |
        # 生成 configure 脚本
        autoreconf -fvi
        ls -la configure  # 验证文件已生成
        chmod +x configure

    - name: Build Iconv
      shell: cmd
      run: |
        curl -sSf %ICONV_URL%/v%ICONV_VER% -o win_iconv.zip
        7z x win_iconv.zip
        ren win-iconv-%ICONV_VER% iconv
        mkdir iconv-build
        cd iconv-build
        cmake -G "NMake Makefiles" ^
              -DBUILD_STATIC=on ^
              -DBUILD_SHARED=off ^
              -DCMAKE_BUILD_TYPE=Release ^
              ../iconv
        nmake
        cd ..

    - name: Prepare iconv
      shell: powershell
      run: |
        New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/iconv-install"
        Copy-Item -Path "iconv/iconv.h" -Destination "${{ github.workspace }}/iconv-install/"
        Copy-Item -Path "iconv-build/iconv.lib" -Destination "${{ github.workspace }}/iconv-install/"

    - name: Build FreeTDS
      shell: bash
      run: |
        ./configure \
          --prefix=${{ github.workspace }}/freetds_install \
          --enable-msdblib \
          --enable-sybase-compat \
          --with-tdsver=auto \
          --with-openssl=no \
          --with-libiconv-prefix=${{ github.workspace }}/iconv-install \
          --disable-threadsafe

        make -j$(nproc)
        make install

        # 验证构建
        ${{ github.workspace }}/freetds_install/bin/tsql -C

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: freetds-windows
        path: ${{ github.workspace }}/freetds_install
