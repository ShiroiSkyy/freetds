name: Windows Build (Autotools)

on:
  workflow_dispatch:

permissions: read-all

jobs:
  build:
    runs-on: windows-latest

    env:
      ICONV_URL: https://codeload.github.com/win-iconv/win-iconv/zip
      ICONV_VER: 0.0.8

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup build environment
      shell: powershell
      run: |
        # 安装基础工具
        choco install -y openssl --version=3.1.1
        choco install -y gperf
        choco install -y 7zip
        choco install -y make

        # 安装 MSYS2 并配置
        choco install -y msys2 --params="/NoUpdate /InstallDir:C:\msys64"
        $env:PATH = "C:\msys64\usr\bin;C:\msys64\mingw64\bin;$env:PATH"
        Add-Content $env:GITHUB_PATH "C:\msys64\usr\bin"
        Add-Content $env:GITHUB_PATH "C:\msys64\mingw64\bin"

    - name: Install autotools
      shell: bash
      run: |
        # 安装特定版本的 autotools
        pacman -Sy --noconfirm --needed autoconf2.69 automake1.16 libtool
        aclocal-1.16 --version
        autoreconf-2.69 --version

    - name: Patch configure.ac
      shell: bash
      run: |
        # 修复重复的 AC_CONFIG_FILES
        sed -i.bak '/AC_CONFIG_FILES/d' configure.ac
        echo "AC_CONFIG_FILES([Makefile])" >> configure.ac
        cat configure.ac | grep -A2 "AC_CONFIG_FILES"

    - name: Generate configure script
      shell: bash
      run: |
        # 按顺序运行 autotools 命令
        libtoolize --force
        aclocal-1.16 -I m4
        autoheader
        automake-1.16 --add-missing --copy
        autoconf-2.69
        ls -la configure

    - name: Build Iconv
      shell: cmd
      run: |
        curl -sSf %ICONV_URL%/v%ICONV_VER% -o win_iconv.zip
        7z x win_iconv.zip
        ren win-iconv-%ICONV_VER% iconv
        mkdir iconv-build
        cd iconv-build
        cmake -G "NMake Makefiles" ^
              -DBUILD_STATIC=on ^
              -DBUILD_SHARED=off ^
              -DCMAKE_BUILD_TYPE=Release ^
              ../iconv
        nmake
        cd ..

    - name: Build FreeTDS
      shell: bash
      run: |
        ./configure \
          --prefix=${{ github.workspace }}/freetds_install \
          --enable-msdblib \
          --enable-sybase-compat \
          --with-tdsver=auto \
          --with-openssl=no \
          --with-libiconv-prefix=${{ github.workspace }}/iconv-install \
          --disable-threadsafe

        make -j$(nproc)
        make install

    - name: Verify build
      shell: bash
      run: |
        ${{ github.workspace }}/freetds_install/bin/tsql -C

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: freetds-windows
        path: ${{ github.workspace }}/freetds_install
